class CRRoistatUtils {
    constructor() {
        this.url = {
            getParams() {
                const a = {}, b = window.location.search.substr(1).split("&");
                return b.forEach(b => {
                    if (/^[^=]+?=[^=]+$/.test(b)) {
                        const c = b.match(/^(.+?)=(.+)$/), d = decodeURI(c[1]), e = decodeURI(c[2]);
                        a[d] = e
                    }
                }), a
            }, devideParams(a) {
                const b = {};
                if (!utils.isEmpty(a)) for (let c in a) /^utm_/.test(c) ? b[c] = a[c] : a["GET " + c] = a[c], delete a[c];
                return {getParams: a, utmParams: b}
            }
        }, this.cart = {
            getProducts() {
                const a = window.crPage.cart, b = a.items;
                if (!b.length) return;
                const c = {}, d = a.subtotal;
                let e = "";
                return b.forEach((a, d) => {
                    const f = utils.cart.devidePrice(a.price), g = f.amount * a.quantity,
                        h = 1 < b.length ? `Р—Р°РєР°Р· ${d + 1}` : "\u0417\u0430\u043A\u0430\u0437";
                    e = e ? e : f.currency, c[h] = `${a.title} = ${g} ${e} (${f.amount} * ${a.quantity})`
                }), c["\u041E\u0431\u0449\u0430\u044F \u0441\u0443\u043C\u043C\u0430"] = `${d} ${e}`, c
            }, devidePrice(a) {
                a = a.replace(",", ".").replace(/[^\d\s\.a-zA-ZР°-СЏРђ-РЇРЃС‘]/g, "");
                const b = a.match(/([\d\.\s]+)(\D+)?$/), c = b[1] ? +b[1].replace(/\s/g, "") : 0,
                    d = b[2] ? b[2].replace(/[\s\.]/g, "") : "";
                return {amount: c, currency: d}
            }
        }, this.card = {
            getProduct(a) {
                let b = utils.card.getProductParam(a, "title"), c = utils.card.getProductParam(a, "price");
                return b = b && b.trim() ? b : "\u041D\u0430\u0437\u0432\u0430\u043D\u0438\u0435 \u043D\u0435 \u0443\u043A\u0430\u0437\u0430\u043D\u043E", c = c && c.trim() ? c : "\u0426\u0435\u043D\u0430 \u043D\u0435 \u0443\u043A\u0430\u0437\u0430\u043D\u0430", {
                    Р—Р°РєР°Р·: `${b} = ${c}`,
                    "РћР±С‰Р°СЏ СЃСѓРјРјР°": c
                }
            }, getProductParam(a) {
                const b = a.closest("[data-item]"), c = JSON.parse(b.dataset("item")), d = c.find(a => a.type == value);
                return !!(d && d.value.trim()) && d.value
            }
        }, this.cookie = {
            getItem(a) {
                a = a.replace(/([.$\/?*+\\{}|()\[\]^])/g, "\\$1");
                const b = new RegExp("(?:^|[^w])" + a + "=(.*?)(?:;|$)"), c = document.cookie.match(b);
                return c ? decodeURIComponent(c[1]) : void 0
            }, getClientIdByGoogle() {
                let a = utils.cookie.getItem("_ga");
                return a = a ? a.replace(/[^\.]+\.[^\.]+\.(\d+\.\d)/, "$1") : a, a ? {"Client ID by Google": a} : {}
            }
        }
    }

    isEmpty(a) {
        for (let b in a) return !(b || a[b])
    }
}

const utils = new CRRoistatUtils;

class CRRoistatUser {
    constructor() {
        this._regEvents([{
            id: "page-view",
            name: "\u041F\u043E\u0441\u0435\u0442\u0438\u0442\u0435\u043B\u044C \u043E\u0442\u043A\u0440\u044B\u043B \u0441\u0430\u0439\u0442"
        }, {
            id: "link-follow",
            name: "\u041F\u0435\u0440\u0435\u0445\u043E\u0434 \u043F\u043E \u0441\u0441\u044B\u043B\u043A\u0435"
        }, {
            id: "modal-open",
            name: "\u041E\u0442\u043A\u0440\u044B\u0442\u043E \u043E\u043A\u043D\u043E"
        }, {
            id: "add-to-cart",
            name: "\u0414\u043E\u0431\u0430\u0432\u043B\u0435\u043D\u043E \u0432 \u043A\u043E\u0440\u0437\u0438\u043D\u0443"
        }, {
            id: "form-change",
            name: "\u041A\u0442\u043E-\u0442\u043E \u043D\u0430\u0447\u0430\u043B \u0437\u0430\u043F\u043E\u043B\u043D\u044F\u0442\u044C \u0444\u043E\u0440\u043C\u0443"
        }, {
            id: "form-submit-success",
            name: "\u0417\u0430\u044F\u0432\u043A\u0430 \u043E\u0442\u043F\u0440\u0430\u0432\u043B\u0435\u043D\u0430"
        }, {
            id: "old-form-submit",
            name: "\u041E\u0442\u043F\u0440\u0430\u0432\u043A\u0430 \u0443\u0441\u0442\u0430\u0440\u0435\u0432\u0448\u0435\u0439 \u0444\u043E\u0440\u043C\u044B"
        }])
    }

    _regEvents(a) {
        this.events = a.map(a => (a.event = new Event(a.id), a))
    }

    on(a, b) {
        const c = this.events.find(b => b.id == a);
        return !c || !c.event instanceof Event ? integration.msg("not-registered-event", {eventId: a}) : document.addEventListener(c.id, () => {
            c.params ? b(c.params) : b()
        }), this
    }

    trigger(a, b = null) {
        const c = this.events.find(b => b.id == a);
        c ? (c.params = b, document.dispatchEvent(c.event)) : integration.msg("not-registered-event", {eventId: a})
    }
}

class CRRoistatIntegration {
    constructor() {
        this.debug = this._getDebugMode(), this.apiURL = "https://cloud.roistat.com/"
    }

    _getDebugMode() {
        const a = window.location.search.substr(1).split("&"), b = a.find(a => /^r_debug=\d+$/.test(a));
        return b ? +b.replace(/^r_debug=(\d+)$/, "$1") : 0
    }

    log(a, b = null, c = "success") {
        if (!this.debug) return;
        const d = "fail" == c ? "crimson" : "warn" == c ? "#ff5318" : "ready" == c ? "#03c03c" : "#2589ff",
            e = `color: white; background-color: ${d}; font-size: 18px; line-height: 30px`,
            f = "%c Roistat CR Integration ";
        let g = a;
        b && "object" == typeof b ? console.log(f, e, g, b) : console.log(f, e, g)
    }

    msg(a, b = null) {
        switch (a) {
            case"wait-for-ready":
                this.log("\u041E\u0436\u0438\u0434\u0430\u043D\u0438\u0435 \u0433\u043E\u0442\u043E\u0432\u043D\u043E\u0441\u0442\u0438 \u0438\u043D\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u0438...", null, "warn");
                break;
            case"dom-loaded":
                this.log("DOM-\u0434\u0435\u0440\u0435\u0432\u043E \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043D\u043E", null, "warn");
                break;
            case"module-load-success":
                this.log("\u041C\u043E\u0434\u0443\u043B\u0438 Roistat \u0443\u0441\u043F\u0435\u0448\u043D\u043E \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043D\u044B", null, "warn");
                break;
            case"modules-load-fail":
                this.log("\u041C\u043E\u0434\u0443\u043B\u0438 Roistat \u043D\u0435 \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043D\u044B, \u0436\u0434\u0435\u043C \u0435\u0449\u0435 3 \u0441\u0435\u043A\u0443\u043D\u0434\u044B...", null, "fail");
                break;
            case"no-modules-check-blocking":
                this.log("\u041D\u0435\u0442 \u043C\u043E\u0434\u0443\u043B\u0435\u0439 Roistat, \u043F\u0440\u043E\u0432\u0435\u0440\u044F\u0435\u043C \u0431\u043B\u043E\u043A\u0438\u0440\u043E\u0432\u043A\u0443 \u0437\u0430\u043F\u0440\u043E\u0441\u043E\u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u043E\u043C...", null, "fail");
                break;
            case"blocked-by-extention":
                this.log("\u0417\u0430\u043F\u0440\u043E\u0441\u044B \u0431\u043B\u043E\u043A\u0438\u0440\u0443\u044E\u0442\u0441\u044F \u043E\u0434\u043D\u0438\u043C \u0438\u0437 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043D\u0438\u0439 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430. \u041D\u0443\u0436\u043D\u043E \u043E\u0442\u043A\u043B\u044E\u0447\u0438\u0442\u044C \u0432\u0441\u0435 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043D\u0438\u044F \u0438, \u0432\u043A\u043B\u044E\u0447\u0430\u044F \u043F\u043E \u043E\u0434\u043D\u043E\u043C\u0443, \u043D\u0430\u0439\u0442\u0438 \u043F\u0440\u043E\u0431\u043B\u0435\u043C\u043D\u043E\u0435, \u0447\u0430\u0449\u0435 \u0432\u0441\u0435\u0433\u043E \u043F\u0440\u0438\u0447\u0438\u043D\u0430 \u0432 \u0431\u043B\u043E\u043A\u0438\u0440\u043E\u0432\u0449\u0438\u043A\u0435 \u0440\u0435\u043A\u043B\u0430\u043C\u044B", null, "fail");
                break;
            case"incorrect-roistat-code-or-account-status":
                this.log("\u041D\u0435\u0432\u0435\u0440\u043D\u043E \u043F\u043E\u0434\u043A\u043B\u044E\u0447\u0435\u043D \u043A\u043E\u0434 Roistat \u0438\u043B\u0438 \u0430\u043A\u043A\u0430\u0443\u043D\u0442 \u0432 Roistat \u0443\u0436\u0435 \u043D\u0435\u0430\u043A\u0442\u0438\u0432\u0435\u043D, \u043E\u0431\u0440\u0430\u0442\u0438\u0442\u0435\u0441\u044C \u0432 \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u043A\u0443 Roistat", null, "fail");
                break;
            case"integration-ready":
                this.log("\u0418\u043D\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044F \u0433\u043E\u0442\u043E\u0432\u0430 \u043A \u0440\u0430\u0431\u043E\u0442\u0435, \u043E\u0448\u0438\u0431\u043E\u043A \u043D\u0435\u0442", null, "ready");
                break;
            case"old-redactor-version":
                this.log("\u0412\u0435\u0440\u0441\u0438\u044F \u0440\u0435\u0434\u0430\u043A\u0442\u043E\u0440\u0430 \u044D\u0442\u043E\u0433\u043E \u0441\u0430\u0439\u0442\u0430 \u0443\u0441\u0442\u0430\u0440\u0435\u043B\u0430, \u0438\u043D\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0431\u0443\u0434\u0435\u0442 \u043F\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044C \u0434\u0430\u043D\u043D\u044B\u0435, \u043E\u0431\u0440\u0430\u0442\u0438\u0442\u0435\u0441\u044C \u0432 \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u043A\u0443 Creatium", null, "fail");
                break;
            case"old-form-submit":
                this.log("\u0414\u0430\u043D\u043D\u044B\u0435 \u0438\u0437 \u044D\u0442\u043E\u0439 \u0444\u043E\u0440\u043C\u044B \u043D\u0435 \u0431\u0443\u0434\u0443\u0442 \u043F\u0435\u0440\u0435\u0434\u0430\u043D\u044B \u0432 Roistat, \u0442\u0430\u043A \u043A\u0430\u043A \u043E\u043D\u0430 \u0443\u0441\u0442\u0430\u0440\u0435\u043B\u0430, \u0435\u0435 \u0441\u043B\u0435\u0434\u0443\u0435\u0442 \u0437\u0430\u043C\u0435\u043D\u0438\u0442\u044C \u043D\u0430 \u043D\u043E\u0432\u0443\u044E \u0432 \u0440\u0435\u0434\u0430\u043A\u0442\u043E\u0440\u0435", null, "fail");
                break;
            case"no-data-item-title":
                this.log("\u0421\u043E\u0431\u044B\u0442\u0438\u0435 \"\u0414\u043E\u0431\u0430\u0432\u043B\u0435\u043D\u043E \u0432 \u043A\u043E\u0440\u0437\u0438\u043D\u0443\" \u043D\u0435 \u043F\u0435\u0440\u0435\u0434\u0430\u043D\u043E \u0432 Roistat - \u043E\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043D\u0430\u0437\u0432\u0430\u043D\u0438\u0435 \u0442\u043E\u0432\u0430\u0440\u0430", null, "fail");
                break;
            case"no-data-item-price":
                this.log("\u0421\u043E\u0431\u044B\u0442\u0438\u0435 \"\u0414\u043E\u0431\u0430\u0432\u043B\u0435\u043D\u043E \u0432 \u043A\u043E\u0440\u0437\u0438\u043D\u0443\" \u043D\u0435 \u043F\u0435\u0440\u0435\u0434\u0430\u043D\u043E \u0432 Roistat - \u043E\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0441\u0442\u043E\u0438\u043C\u043E\u0441\u0442\u044C \u0442\u043E\u0432\u0430\u0440\u0430", null, "fail");
                break;
            case"not-registered-event":
                this.log(`РЎРѕР±С‹С‚РёСЏ "${b.eventId}" РЅРµ СЃСѓС‰РµСЃС‚РІСѓРµС‚`, null, "fail");
                break;
            case"event-send-success":
                this.log(`РЎРѕР±С‹С‚РёРµ "${b.eventName}" СѓСЃРїРµС€РЅРѕ РїРµСЂРµРґР°РЅРѕ РІ Roistat`, b.eventData);
                break;
            default:
        }
    }

    sendEvent(a, b = null) {
        const c = user.events.find(b => b.id == a);
        c ? (roistat.event.send(c.name, b), this.msg("event-send-success", {
            eventName: c.name,
            eventData: b
        })) : this.msg("not-registered-event", {eventId: a})
    }

    sendForm(a, b) {
        roistatGoal.reach(b), this.log(`РўР°Р±Р»РёС†Р° РґР°РЅРЅС‹С…, РїРµСЂРµРґР°РЅРЅС‹С… РІ Roistat РїСЂРё РѕС‚РїСЂР°РІРєРµ С„РѕСЂРјС‹ "${a}":`), console.table(b)
    }

    waitForRoistatResponse() {
        return new Promise((a, b) => {
            fetch(this.apiURL, {mode: "no-cors"}).then(() => a()).catch(() => b())
        })
    }

    waitForRoistatModules() {
        return new Promise(a => {
            let b = 0, c = !1, d = setInterval(() => {
                2e3 <= b && !c ? (this.msg("modules-load-fail"), c = !0) : 5e3 <= b && (this.msg("no-modules-check-blocking"), this.waitForRoistatResponse().then(() => this.msg("incorrect-roistat-code-or-account-status")).catch(() => this.msg("blocked-by-extention")), clearInterval(d)), b += 1e3
            }, 1e3);
            window.onRoistatAllModulesLoaded = () => {
                this.msg("module-load-success"), clearInterval(d), a()
            }
        })
    }

    waitForDOM() {
        return new Promise(a => {
            document.addEventListener("DOMContentLoaded", () => {
                this.msg("dom-loaded"), a()
            })
        })
    }

    waitForReady() {
        return this.msg("wait-for-ready"), Promise.all([this.waitForDOM(), this.waitForRoistatModules()])
    }
}

class CRRoistatForm {
    constructor(a) {
        this.el = a.el, this.crApiForm = a, this.isCartPageForm = "/cart" == location.pathname, this.isProductCardForm = !!this.el.closest("[data-item]")
    }

    getLeadName() {
        const a = this.crApiForm;
        if (this.isCartPageForm) return "\u041E\u0442\u043F\u0440\u0430\u0432\u043B\u0435\u043D\u0430 \u0444\u043E\u0440\u043C\u0430 \u0432 \u043A\u043E\u0440\u0437\u0438\u043D\u0435";
        if (this.isProductCardForm) {
            let a = utils.card.getProductParam("title"), b = utils.card.getProductParam("price");
            return a = a && a.trim() ? a : "\u041D\u0430\u0437\u0432\u0430\u043D\u0438\u0435 \u043D\u0435 \u0443\u043A\u0430\u0437\u0430\u043D\u043E", b = b && b.trim() ? b : "\u0426\u0435\u043D\u0430 \u043D\u0435 \u0443\u043A\u0430\u0437\u0430\u043D\u0430", `РћС‚РїСЂР°РІР»РµРЅР° С„РѕСЂРјР° РІ РєР°СЂС‚РѕС‡РєРµ С‚РѕРІР°СЂР° "${a}" (${b})`
        }
        return `РћС‚РїСЂР°РІР»РµРЅР° С„РѕСЂРјР°: "${a.name}"`
    }

    getExtFields() {
        const a = this.crApiForm, b = a.fields.filter(a => !a.type);
        if (!b) return "";
        const c = {};
        return b.forEach(a => {
            if (a.value) {
                const b = this.getStringByValue(a.value);
                !(b || 0 === b) || (c[a.name] = b)
            }
        }), c
    }

    getStringByValue(a) {
        return Array.isArray(a) ? this.getFileNameByArray(a) : "object" == typeof a ? this.getStringByObject(a) : "boolean" == typeof a ? this.getStringByBoolean(a) : a
    }

    getFileNameByArray(a) {
        return !!a[0] && a[0].replace(/.+\/([^\/]+)$/, "$1")
    }

    getStringByObject(a) {
        let b = "";
        for (let c in a) a[c] && (b = b ? b + ", " + c : c);
        return b
    }

    getStringByBoolean(a) {
        return a ? "\u0414\u0430" : "\u041D\u0435\u0442"
    }

    getFieldValue(a) {
        const b = this.crApiForm, c = b.fields.find(b => b.type == a);
        return c && c.value && c.value.trim() ? c.value.trim() : ""
    }

    getFormData() {
        const a = utils.url.getParams(), b = utils.url.devideParams(a), c = this.getExtFields(), d = {
            leadName: this.getLeadName(),
            text: "\u0421\u0442\u0440\u0430\u043D\u0438\u0446\u0430: " + location.hostname + location.pathname,
            name: this.getFieldValue("name"),
            email: this.getFieldValue("email"),
            phone: this.getFieldValue("phone"),
            fields: {
                push(a) {
                    if (!utils.isEmpty(a)) for (let b in a) this[b] = a[b]
                }
            }
        };
        return this.isCartPageForm ? d.fields.push(utils.cart.getProducts()) : !!this.isProductCardForm && d.fields.push(utils.card.getProduct(this.el)), d.fields.push(c), d.fields.push(b.getParams), d.fields.push(b.utmParams), d.fields.push({roistat_visit: roistat.visit}), d.fields.push(utils.cookie.getClientIdByGoogle()), delete d.fields.push, d
    }
}

const user = new CRRoistatUser, integration = new CRRoistatIntegration;
integration.waitForReady().then(() => cr && !cr.api ? void integration.msg("old-redactor-version") : void (integration.msg("integration-ready"), cr.api(a => {
    user.trigger("page-view"), "/cart" != location.pathname || (window.crPage = a), a.on("popup-show", a => {
        user.trigger("modal-open", {modalId: a.popup.id})
    }), a.waitForAppear("a", a => {
        a.addEventListener("click", () => {
            const b = a.href.hostname == location.hostname, c = a.href.pathname == location.pathname;
            b && c || user.trigger("link-follow", {link: a.href.replace(/http(s)?:\/\//, "")})
        })
    }), a.waitForAppear(".cr-form", b => {
        const c = a.getComponent(b);
        b = new CRRoistatForm(c), b.el.addEventListener("change", () => {
            b.el.isChanged || (user.trigger("form-change", {formName: c ? c.name : "\u041D\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043D\u043E"}), b.el.isChanged = !0)
        }), c.on("before-submit", () => {
            function a() {
                user.trigger("form-submit-success", {formName: c.name, formData: d}), c.off("submit", a)
            }

            const d = b.getFormData();
            c.on("submit", a)
        })
    }), a.waitForAppear("[data-form]", a => {
        a.classList.contains("cr-form") || $(a).on("submit", function () {
            user.trigger("old-form-submit")
        })
    }), a.waitForAppear(".widget-element[data-item] [data-action=\"addtocart\"]", a => {
        a.addEventListener("click", () => {
            const b = a.closest("[data-item]"), c = JSON.parse(b.dataset.item), d = c.find(a => "title" == a.type),
                e = c.find(a => "price" == a.type);
            if (!d) return void integration.msg("no-data-item-title");
            if (!e) return void integration.msg("no-data-item-price"); else {
                const a = d.value, b = e.value;
                user.trigger("add-to-cart", {title: a, price: b})
            }
        })
    })
}))), user.on("page-view", () => {
    integration.sendEvent("page-view", {url: location.href})
}), user.on("link-follow", a => {
    integration.sendEvent("link-follow", {РЎСЃС‹Р»РєР°: a.link, РЎС‚СЂР°РЅРёС†Р°: location.pathname})
}), user.on("modal-open", a => {
    integration.sendEvent("modal-open", {"ID РѕРєРЅР°": a.modalId, РЎС‚СЂР°РЅРёС†Р°: location.pathname})
}), user.on("add-to-cart", a => {
    integration.sendEvent("add-to-cart", {РўРѕРІР°СЂ: a.title, РЎС‚РѕРёРјРѕСЃС‚СЊ: a.price, РЎС‚СЂР°РЅРёС†Р°: location.pathname})
}), user.on("form-change", a => {
    integration.sendEvent("form-change", {"РРјСЏ С„РѕСЂРјС‹": a.formName, РЎС‚СЂР°РЅРёС†Р°: location.pathname})
}), user.on("form-submit-success", a => {
    integration.sendEvent("form-submit-success", {
        "РРјСЏ С„РѕСЂРјС‹": a.formName,
        РЎС‚СЂР°РЅРёС†Р°: location.pathname
    }), integration.sendForm(a.formName, a.formData)
}), user.on("old-form-submit", () => {
    integration.msg("old-form-submit")
});
